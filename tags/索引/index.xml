<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>索引 on 翔仔的个人博客</title><link>https://fatedeity.cn/tags/%E7%B4%A2%E5%BC%95.html</link><description>Recent content in 索引 on 翔仔的个人博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 12 Jun 2022 10:03:09 +0800</lastBuildDate><atom:link href="https://fatedeity.cn/tags/%E7%B4%A2%E5%BC%95/index.xml" rel="self" type="application/rss+xml"/><item><title>B+ 树的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/b+-tree-basic.html</link><pubDate>Sun, 12 Jun 2022 10:03:09 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/b+-tree-basic.html</guid><description>&lt;p>B+ 树通常用于数据库和操作系统的文件系统中，对内存与磁盘之间的交互提供了非常大的遍历，是一种常见的存储在磁盘的索引结构。&lt;/p></description></item><item><title>B 树的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/b-tree-basic.html</link><pubDate>Fri, 10 Jun 2022 22:24:19 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/b-tree-basic.html</guid><description>&lt;p>在计算机科学中，B 树是一种自平衡的树，能够保持数据有序。其适用于读写相对大的数据块的存储系统，例如磁盘，因此也常作为数据库系统的索引结构。&lt;/p></description></item><item><title>AVL 树的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/avl-tree-basic.html</link><pubDate>Thu, 02 Jun 2022 19:41:08 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/avl-tree-basic.html</guid><description>&lt;p>AVL 树是最早被发明的自平衡的二叉查找树，在 AVL 树中，任意结点的两个子树的高度最大差别为 1，所以它也被称为高度平衡树，其本质仍然是一颗二叉查找树。&lt;/p></description></item><item><title>跳表的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/skip-list-basic.html</link><pubDate>Wed, 01 Jun 2022 19:15:20 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/skip-list-basic.html</guid><description>&lt;p>有序的数组可以使用二分查找的方法快速检索一个数据，但是同为线性表结构的链表没有办法使用二分查找，而跳表突破了这个限制，允许链表使用类似于二分查找的方法查找数据。&lt;/p></description></item></channel></rss>