<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数据结构与算法 on 翔仔的个人博客</title><link>https://fatedeity.cn/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95.html</link><description>Recent content in 数据结构与算法 on 翔仔的个人博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 25 Jul 2022 09:10:18 +0800</lastBuildDate><atom:link href="https://fatedeity.cn/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>四大经典算法思想</title><link>https://fatedeity.cn/posts/data-structure-algorithm/classical-algorithm-thought.html</link><pubDate>Mon, 25 Jul 2022 09:10:18 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/classical-algorithm-thought.html</guid><description>&lt;p>学习任何东西，都需要深究其底层，掌握其思想，融会贯通才能应万变。对于算法而言，同样如此，编程的算法题千千万，刷题是刷不完的，还是需要掌握算法的思想才能掌握如何求解算法题。&lt;/p></description></item><item><title>插值查找的简单理解</title><link>https://fatedeity.cn/posts/data-structure-algorithm/interpolation-search.html</link><pubDate>Tue, 05 Jul 2022 20:11:38 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/interpolation-search.html</guid><description>&lt;p>插值查找和二分查找一样，是有序表的一种查找算法，其基于二分查找，将查找点的选择改进为自适应选择，提高查找效率。&lt;/p></description></item><item><title>二分查找的简单理解</title><link>https://fatedeity.cn/posts/data-structure-algorithm/binary-search.html</link><pubDate>Mon, 04 Jul 2022 10:03:17 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/binary-search.html</guid><description>&lt;p>二分查找是一种提升有序序列搜索效率的查找算法，大大降低了数组查找的时间，其类似的思想也应用到二叉树、数据库索引等场景。&lt;/p></description></item><item><title>基数排序的简单理解</title><link>https://fatedeity.cn/posts/data-structure-algorithm/radix-sort.html</link><pubDate>Sat, 02 Jul 2022 15:01:22 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/radix-sort.html</guid><description>&lt;p>基数排序是桶排序的一种扩展使用，同样是一种非比较的整数排序算法，其原理是将整数位数切割成不同的数字，然后按每个位数分别比较。&lt;/p></description></item><item><title>桶排序的简单理解</title><link>https://fatedeity.cn/posts/data-structure-algorithm/bucket-sort.html</link><pubDate>Thu, 30 Jun 2022 08:42:29 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/bucket-sort.html</guid><description>&lt;p>桶排序是计数排序的一种扩展使用，适用于元素值范围不大的序列。如果对大量学生的考试成绩做排序，就非常适合使用桶排序。&lt;/p></description></item><item><title>计数排序的简单理解</title><link>https://fatedeity.cn/posts/data-structure-algorithm/count-sort.html</link><pubDate>Tue, 28 Jun 2022 21:49:04 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/count-sort.html</guid><description>&lt;p>学习计数排序可以了解到空间换时间的思想，其是一种牺牲空间换时间的排序算法，在其特定的场景上，甚至将时间复杂度降到了线性级别。&lt;/p></description></item><item><title>归并排序的简单理解</title><link>https://fatedeity.cn/posts/data-structure-algorithm/merge-sort.html</link><pubDate>Fri, 24 Jun 2022 08:58:56 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/merge-sort.html</guid><description>&lt;p>归并排序与与快速排序一样，是采用分治法（Divide and Conquer）的一个非常典型的应用，在排序算法中，同时了解归并排序和快速排序，相互印证，能理解得更深。&lt;/p></description></item><item><title>快速排序的简单理解</title><link>https://fatedeity.cn/posts/data-structure-algorithm/quick-sort.html</link><pubDate>Thu, 23 Jun 2022 08:49:12 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/quick-sort.html</guid><description>&lt;p>快速排序是面试当中最常见的排序算法问题了，除了需要理解快速排序的流程，还要理解一些快速排序的代码实现，了解一些优化方法。&lt;/p></description></item><item><title>希尔排序的简单理解</title><link>https://fatedeity.cn/posts/data-structure-algorithm/shell-sort.html</link><pubDate>Wed, 22 Jun 2022 14:07:42 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/shell-sort.html</guid><description>&lt;p>插入排序在对基本有序的较小序列进行排序时，效率是非常高的，希尔排序针对这一点对插入排序的方式进行了再次优化。&lt;/p></description></item><item><title>插入排序的简单理解</title><link>https://fatedeity.cn/posts/data-structure-algorithm/insertion-sort.html</link><pubDate>Mon, 20 Jun 2022 14:13:24 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/insertion-sort.html</guid><description>&lt;p>插入排对是一个容易被低估的排序算法，虽然其时间复杂度看起来与冒泡排序和选择排序差不多，但是用在相对有序的短序列中却格外的好。&lt;/p></description></item><item><title>选择排序的简单理解</title><link>https://fatedeity.cn/posts/data-structure-algorithm/selection-sort.html</link><pubDate>Sun, 19 Jun 2022 11:47:05 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/selection-sort.html</guid><description>&lt;p>选择排序的概念非常容易理解，按照一般的思路，排序就是每次从原来的序列中拿出最小的元素即可，最终得到的序列就是有序序列。&lt;/p></description></item><item><title>冒泡排序的简单理解</title><link>https://fatedeity.cn/posts/data-structure-algorithm/bubble-sort.html</link><pubDate>Sat, 18 Jun 2022 10:46:47 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/bubble-sort.html</guid><description>&lt;p>冒泡排序是学习排序算法时最先遇到的算法，其形象名称和排序过程最容易记住，很多人会在面试时谈论起，真正理解了冒泡排序算法才能更深入地学习其他排序算法。&lt;/p></description></item><item><title>如何分析排序算法</title><link>https://fatedeity.cn/posts/data-structure-algorithm/analyze-sorting-algorithms.html</link><pubDate>Thu, 16 Jun 2022 16:32:27 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/analyze-sorting-algorithms.html</guid><description>&lt;p>学习排序算法，除了学习它的算法原理和代码实现之外，更重要的是要学会如何评价、分析排序算法。其实，排序算法主要是从执行效率、内存消耗、稳定性三个方面进行分析。&lt;/p></description></item><item><title>算法的复杂度分析</title><link>https://fatedeity.cn/posts/data-structure-algorithm/complexity-analysis.html</link><pubDate>Tue, 14 Jun 2022 15:52:09 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/complexity-analysis.html</guid><description>&lt;p>对一个算法做复杂度分析是学习算法必备的知识点，当掌握了如何对一个算法做复杂度分析，在优化算法方面将会如虎添翼。&lt;/p></description></item><item><title>一致性哈希的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/consistent-hash-basic.html</link><pubDate>Sun, 12 Jun 2022 18:47:54 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/consistent-hash-basic.html</guid><description>&lt;p>一致性哈希是一种特殊的哈希表使用方式，它解决了简单哈希算法在分布式散列表中存在的动态伸缩问题。其能在保证增加或减少服务器时，数据存储的改变最少，相比传统哈希算法大大节省了数据移动的开销。&lt;/p></description></item><item><title>B+ 树的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/b+-tree-basic.html</link><pubDate>Sun, 12 Jun 2022 10:03:09 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/b+-tree-basic.html</guid><description>&lt;p>B+ 树通常用于数据库和操作系统的文件系统中，对内存与磁盘之间的交互提供了非常大的遍历，是一种常见的存储在磁盘的索引结构。&lt;/p></description></item><item><title>B 树的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/b-tree-basic.html</link><pubDate>Fri, 10 Jun 2022 22:24:19 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/b-tree-basic.html</guid><description>&lt;p>在计算机科学中，B 树是一种自平衡的树，能够保持数据有序。其适用于读写相对大的数据块的存储系统，例如磁盘，因此也常作为数据库系统的索引结构。&lt;/p></description></item><item><title>AVL 树的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/avl-tree-basic.html</link><pubDate>Thu, 02 Jun 2022 19:41:08 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/avl-tree-basic.html</guid><description>&lt;p>AVL 树是最早被发明的自平衡的二叉查找树，在 AVL 树中，任意结点的两个子树的高度最大差别为 1，所以它也被称为高度平衡树，其本质仍然是一颗二叉查找树。&lt;/p></description></item><item><title>跳表的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/skip-list-basic.html</link><pubDate>Wed, 01 Jun 2022 19:15:20 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/skip-list-basic.html</guid><description>&lt;p>有序的数组可以使用二分查找的方法快速检索一个数据，但是同为线性表结构的链表没有办法使用二分查找，而跳表突破了这个限制，允许链表使用类似于二分查找的方法查找数据。&lt;/p></description></item><item><title>哈希表的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/hash-basic.html</link><pubDate>Tue, 31 May 2022 20:29:14 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/hash-basic.html</guid><description>&lt;p>哈希表也被称为散列表，其实现使用到了散列技术，散列技术在理想情况下，无须任何比较就可以找到待查关键字，查找的效率非常高。&lt;/p></description></item><item><title>堆的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/heap-basic.html</link><pubDate>Thu, 26 May 2022 08:19:58 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/heap-basic.html</guid><description>&lt;p>从逻辑结构上看，堆是一种非常特别的树形结构，从应用场景上看，与常见的树形结构又完全不同，使用堆还能解决许多独特的问题。&lt;/p></description></item><item><title>二叉树的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/binary-tree-basic.html</link><pubDate>Tue, 24 May 2022 08:54:49 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/binary-tree-basic.html</guid><description>&lt;p>二叉树是树形结构的一种重要类型，许多实际问题抽象出来的数据结构往往是二叉树形式，即使是一般的树也能简单地转换为二叉树，因此二叉树显得格外重要。&lt;/p></description></item><item><title>队列的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/queue-basic.html</link><pubDate>Mon, 23 May 2022 16:13:38 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/queue-basic.html</guid><description>&lt;p>队列这个概念非常容易理解，将队列比喻成只能同时通过一辆汽车的隧道，当汽车进入到隧道内部，只能先进隧道的汽车先出隧道，后进隧道的汽车后出隧道。&lt;/p></description></item><item><title>栈的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/stack-basic.html</link><pubDate>Sat, 21 May 2022 08:20:15 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/stack-basic.html</guid><description>&lt;p>数据结构中的栈是一种操作受限的线性表，只允许在一端插入和删除数据，但却是计算机科学领域中非常重要的数据结构，常使用在底层结构。&lt;/p></description></item><item><title>链表的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/linked-list-basic.html</link><pubDate>Fri, 20 May 2022 11:46:56 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/linked-list-basic.html</guid><description>&lt;p>链表是两大物理存储结构之一，与数组使用一组连续的内存空间不同，链表通过链接的方式将零散的内存空间串联起来使用，是线性表的另一种存储方式。&lt;/p></description></item><item><title>数组的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/array-basic.html</link><pubDate>Thu, 19 May 2022 20:49:47 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/array-basic.html</guid><description>&lt;p>数组是最基础的数据结构，也是两大物理存储结构之一，只有深刻理解了数组的概念和特性，才能算是迈入学习数据结构的殿堂，才能将抽象的数据结构映射到代码当中。&lt;/p></description></item></channel></rss>