<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>翔仔的个人博客</title><link>https://fatedeity.cn/</link><description>Recent content on 翔仔的个人博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 20 Jun 2022 14:13:24 +0800</lastBuildDate><atom:link href="https://fatedeity.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>关于</title><link>https://fatedeity.cn/about.html</link><pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate><guid>https://fatedeity.cn/about.html</guid><description>简介 翔仔，一名妄想用努力奋斗来掩饰自己平庸的程序员。 在技术这条路上，虽然已经有很多前辈，但因自己的性格所致，一直也是踽踽独行。 本就不太会说话</description></item><item><title>插入排序的简单理解</title><link>https://fatedeity.cn/posts/data-structure-algorithm/insertion-sort.html</link><pubDate>Mon, 20 Jun 2022 14:13:24 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/insertion-sort.html</guid><description>&lt;p>插入排对是一个容易被低估的排序算法，虽然其时间复杂度看起来与冒泡排序和选择排序差不多，但是用在相对有序的短序列中却格外的好。&lt;/p></description></item><item><title>选择排序的简单理解</title><link>https://fatedeity.cn/posts/data-structure-algorithm/selection-sort.html</link><pubDate>Sun, 19 Jun 2022 11:47:05 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/selection-sort.html</guid><description>&lt;p>选择排序的概念非常容易理解，按照一般的思路，排序就是每次从原来的序列中拿出最小的元素即可，最终得到的序列就是有序序列。&lt;/p></description></item><item><title>冒泡排序的简单理解</title><link>https://fatedeity.cn/posts/data-structure-algorithm/bubble-sort.html</link><pubDate>Sat, 18 Jun 2022 10:46:47 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/bubble-sort.html</guid><description>&lt;p>冒泡排序是学习排序算法时最先遇到的算法，其形象名称和排序过程最容易记住，很多人会在面试时谈论起，真正理解了冒泡排序算法才能更深入地学习其他排序算法。&lt;/p></description></item><item><title>如何分析排序算法</title><link>https://fatedeity.cn/posts/data-structure-algorithm/analyze-sorting-algorithms.html</link><pubDate>Thu, 16 Jun 2022 16:32:27 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/analyze-sorting-algorithms.html</guid><description>&lt;p>学习排序算法，除了学习它的算法原理和代码实现之外，更重要的是要学会如何评价、分析排序算法。其实，排序算法主要是从执行效率、内存消耗、稳定性三个方面进行分析。&lt;/p></description></item><item><title>算法的复杂度分析</title><link>https://fatedeity.cn/posts/data-structure-algorithm/complexity-analysis.html</link><pubDate>Tue, 14 Jun 2022 15:52:09 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/complexity-analysis.html</guid><description>&lt;p>对一个算法做复杂度分析是学习算法必备的知识点，当掌握了如何对一个算法做复杂度分析，在优化算法方面将会如虎添翼。&lt;/p></description></item><item><title>一致性哈希的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/consistent-hash-basic.html</link><pubDate>Sun, 12 Jun 2022 18:47:54 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/consistent-hash-basic.html</guid><description>&lt;p>一致性哈希是一种特殊的哈希表使用方式，它解决了简单哈希算法在分布式散列表中存在的动态伸缩问题。其能在保证增加或减少服务器时，数据存储的改变最少，相比传统哈希算法大大节省了数据移动的开销。&lt;/p></description></item><item><title>B+ 树的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/b+-tree-basic.html</link><pubDate>Sun, 12 Jun 2022 10:03:09 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/b+-tree-basic.html</guid><description>&lt;p>B+ 树通常用于数据库和操作系统的文件系统中，对内存与磁盘之间的交互提供了非常大的遍历，是一种常见的存储在磁盘的索引结构。&lt;/p></description></item><item><title>B 树的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/b-tree-basic.html</link><pubDate>Fri, 10 Jun 2022 22:24:19 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/b-tree-basic.html</guid><description>&lt;p>在计算机科学中，B 树是一种自平衡的树，能够保持数据有序。其适用于读写相对大的数据块的存储系统，例如磁盘，因此也常作为数据库系统的索引结构。&lt;/p></description></item><item><title>AVL 树的简单认识</title><link>https://fatedeity.cn/posts/data-structure-algorithm/avl-tree-basic.html</link><pubDate>Thu, 02 Jun 2022 19:41:08 +0800</pubDate><guid>https://fatedeity.cn/posts/data-structure-algorithm/avl-tree-basic.html</guid><description>&lt;p>AVL 树是最早被发明的自平衡的二叉查找树，在 AVL 树中，任意结点的两个子树的高度最大差别为 1，所以它也被称为高度平衡树，其本质仍然是一颗二叉查找树。&lt;/p></description></item></channel></rss>