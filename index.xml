<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>程序员翔仔</title><link>https://fatedeity.cn/</link><description>程序员翔仔，一个记录了翔仔个人编程笔记的地方</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 29 Mar 2023 08:28:17 +0800</lastBuildDate><atom:link href="https://fatedeity.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>解决 ssh 找不到对应主机密钥类型</title><link>https://fatedeity.cn/posts/operating-system/openssh-no-matching-host-key-type-found.html</link><pubDate>Wed, 29 Mar 2023 08:28:17 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/operating-system/openssh-no-matching-host-key-type-found.html</guid><description>&lt;p>如果最近升级到了 openssh 8.8 版，你会发现连接某些之前连接得好好的服务器突然无法连接。&lt;/p></description></item><item><title>Redis - 对象结构</title><link>https://fatedeity.cn/posts/database/redis-object-structure.html</link><pubDate>Mon, 27 Mar 2023 09:03:40 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/database/redis-object-structure.html</guid><description>&lt;p>其实，Redis 的每种对象都有对象结构与对应编码的数据结构组合而成，进阶 Redis 就需要从它的对象机制开始。&lt;/p></description></item><item><title>Redis - 基础数据类型</title><link>https://fatedeity.cn/posts/database/redis-basic-data-type.html</link><pubDate>Wed, 22 Mar 2023 09:08:20 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/database/redis-basic-data-type.html</guid><description>&lt;p>学会使用 Redis 的一个重要内容就是 Redis 的数据类型，对于开发人员而言，学会 Redis 基础数据类型的使用即可应用到程序开发当中。&lt;/p></description></item><item><title>常见编码规范</title><link>https://fatedeity.cn/posts/programming-pattern/common-coding-style-standard.html</link><pubDate>Thu, 02 Feb 2023 14:35:11 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/programming-pattern/common-coding-style-standard.html</guid><description>&lt;p>通常，不同的公司里有着不同的编码规范，主要是从代码得准确性、稳定性、可读性等地方着手制定，以提高团队成员之间的协作效率，这里主要是列出一些常见的编码规范。&lt;/p></description></item><item><title>Redis - 介绍与使用场景</title><link>https://fatedeity.cn/posts/database/redis-introduction-usage-scenario.html</link><pubDate>Tue, 31 Jan 2023 10:59:28 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/database/redis-introduction-usage-scenario.html</guid><description>&lt;p>Redis 每秒可以处理超过 10 万次读写操作，是已知性能最快的 key-value 数据库，称得上是必须要学会的知识。&lt;/p></description></item><item><title>MongoDB - 分片简介</title><link>https://fatedeity.cn/posts/database/mongodb-sharding-introduction.html</link><pubDate>Sat, 07 Jan 2023 09:34:28 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/database/mongodb-sharding-introduction.html</guid><description>&lt;p>分片是指跨机器拆分数据的过程，通过在每台机器上放置数据的子集，无须功能强大的机器，只使用大量功能稍弱的机器，就可以存储更多的数据并处理更多的负载。&lt;/p></description></item><item><title>MongoDB - 副本集简介</title><link>https://fatedeity.cn/posts/database/mongodb-replica-set-introduction.html</link><pubDate>Thu, 29 Dec 2022 09:35:00 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/database/mongodb-replica-set-introduction.html</guid><description>&lt;p>MongoDB 的副本集类似于有自动故障修复功能的主从集群，提供了数据的冗余和高可用，是所有生产部署的基础。&lt;/p></description></item><item><title>MongoDB - 模式设计</title><link>https://fatedeity.cn/posts/database/mongodb-model-design.html</link><pubDate>Mon, 26 Dec 2022 09:11:34 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/database/mongodb-model-design.html</guid><description>&lt;p>虽然说 MongoDB 是无模式的，但实际上模式设计在 MongoDB 中也非常重要。在实际开发中，大多数性能问题都可以追溯到糟糕的模式设计。&lt;/p></description></item><item><title>MongoDB - 数据模型的设计模式</title><link>https://fatedeity.cn/posts/database/mongodb-model-design-pattern.html</link><pubDate>Tue, 13 Dec 2022 09:34:02 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/database/mongodb-model-design-pattern.html</guid><description>&lt;p>在实际开发中，大多数性能问题都可以追溯到糟糕的模型设计。官方也提供分享过文档模型设计的进阶技巧，这里简单翻译记录一下。&lt;/p></description></item><item><title>MongoDB - 事务支持</title><link>https://fatedeity.cn/posts/database/mongodb-transaction-support.html</link><pubDate>Fri, 25 Nov 2022 15:23:02 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/database/mongodb-transaction-support.html</guid><description>&lt;p>在 4.2 版本及更高版本中，MongoDB 提供了事务的支持，并且在其是分布式数据库的基础上，提供了支持跨多个操作、集合、数据库、文档和分片的 ACID 事务。&lt;/p></description></item><item><title>MongoDB - 聚合查询</title><link>https://fatedeity.cn/posts/database/mongodb-aggregate-query.html</link><pubDate>Thu, 24 Nov 2022 08:38:28 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/database/mongodb-aggregate-query.html</guid><description>&lt;p>在实际使用时，必不可少地需要将多个文档甚至是多个集合汇总到一起计算、分析，MongoDB 提供了原生聚合框架支持这样的计算、分析。&lt;/p></description></item><item><title>MongoDB - 索引知识</title><link>https://fatedeity.cn/posts/database/mongodb-index-knowledge.html</link><pubDate>Fri, 18 Nov 2022 08:38:28 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/database/mongodb-index-knowledge.html</guid><description>&lt;p>学会 MongoDB 的增删改查只能算得上是“初窥门径”，了解、熟练掌握索引才能算得上“融会贯通”。基本可以认为数据库的索引知识是一个初级开发向中级开发转变所必备的知识。&lt;/p></description></item><item><title>MongoDB - 增删改查</title><link>https://fatedeity.cn/posts/database/mongodb-crud.html</link><pubDate>Wed, 16 Nov 2022 09:37:28 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/database/mongodb-crud.html</guid><description>&lt;p>对于开发人员而言，数据库的增删改查操作才是最常使用的功能，学习 MongoDB 时还需对这些功能熟记于心才行啊。我就在这里做一个简单的备忘，多看官方文档才是正道。&lt;/p></description></item><item><title>MongoDB - 入门指南</title><link>https://fatedeity.cn/posts/database/mongodb-started-guide.html</link><pubDate>Mon, 14 Nov 2022 08:32:58 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/database/mongodb-started-guide.html</guid><description>&lt;p>简单了解 MongoDB 的基本概念之后，就需要了解其提供的一些工具和数据逻辑结构，以真正开始入门 MongoDB 的学习。&lt;/p></description></item><item><title>初识设计模式 - 解释器模式</title><link>https://fatedeity.cn/posts/programming-pattern/interpreter-design-pattern.html</link><pubDate>Fri, 11 Nov 2022 08:26:21 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/programming-pattern/interpreter-design-pattern.html</guid><description>&lt;p>解释器模式是一种使用频率相对较低但学习难度较大的设计模式，它用于描述如何使用面向对象语言构成一个简单的语言解释器。&lt;/p></description></item><item><title>初识设计模式 - 访问者模式</title><link>https://fatedeity.cn/posts/programming-pattern/visitor-design-pattern.html</link><pubDate>Thu, 10 Nov 2022 08:32:21 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/programming-pattern/visitor-design-pattern.html</guid><description>&lt;p>访问者模式被认为是最复杂的设计模式，并且使用频率不高。大多情况下，你不需要使用访问者模式，但是一旦需要使用它时，那就真的需要使用了。&lt;/p></description></item><item><title>初识设计模式 - 中介模式</title><link>https://fatedeity.cn/posts/programming-pattern/mediator-design-pattern.html</link><pubDate>Wed, 09 Nov 2022 08:36:21 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/programming-pattern/mediator-design-pattern.html</guid><description>&lt;p>中介模式属于行为型设计模式，可以将原本难以理解的网状结构转换成了相对加单的星型结构，主要用来降低多个对象和类之间的通信复杂性。&lt;/p></description></item><item><title>初识设计模式 - 职责链模式</title><link>https://fatedeity.cn/posts/programming-pattern/chain-of-responsibility-design-pattern.html</link><pubDate>Tue, 08 Nov 2022 08:45:21 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/programming-pattern/chain-of-responsibility-design-pattern.html</guid><description>&lt;p>职责链模式是一种与策略模式类似的设计模式，都是使用多个对象去处理同一个请求。不同的是，职责链模式针对的一条链路上的所有对象，而不是“非此即彼”的关系。&lt;/p></description></item><item><title>初识设计模式 - 备忘录模式</title><link>https://fatedeity.cn/posts/programming-pattern/memento-design-pattern.html</link><pubDate>Fri, 04 Nov 2022 08:54:02 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/programming-pattern/memento-design-pattern.html</guid><description>&lt;p>备忘录模式是一种行为设计模式，允许在不暴露对象实现细节的情况下保存和恢复对象之前的状态。&lt;/p></description></item><item><title>MongoDB - 简单了解</title><link>https://fatedeity.cn/posts/database/mongodb-simple-know.html</link><pubDate>Tue, 01 Nov 2022 08:47:52 +0800</pubDate><author>翔仔</author><guid>https://fatedeity.cn/posts/database/mongodb-simple-know.html</guid><description>&lt;p>MongoDB 是一个基于分布式文件存储的数据库，因此其常作为使用了大数据技术的公司的优选；MongoDB 的存储是类 JSON 结构，因此在一些敏捷 Web 开发中也常使用到。&lt;/p></description></item></channel></rss>